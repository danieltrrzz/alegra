http:
  port: ${PORT:-3000}

apiEndpoints:
  order:
    host: "*"
    paths:
      - "/order"
      - "/order/:id"

  dish:
    host: "*"
    paths:
      - "/kitchen"
      - "/kitchen/:id"

  ingredient:
    host: "*"
    paths:
      - "/inventory"
      - "/inventory/:ingredient"

  purchase:
    host: "*"
    paths:
      - "/market"
      - "/market/:id"

  notifyChangeEvent:
    host: "*"
    paths:
      - "/io/notify-change-event"

serviceEndpoints:
  orderService:
    url: "${ORDER_SERVICE_URL:-http://localhost:3001/ms}"

  kitchenService:
    url: "${KITCHEN_SERVICE_URL:-http://localhost:3002/ms}"

  inventoryService:
    url: "${INVENTORY_SERVICE_URL:-http://localhost:3003/ms}"

  marketService:
    url: "${MARKET_SERVICE_URL:-http://localhost:3004/ms}"

policies:
  - cors
  - proxy

pipelines:
  orderPipeline:
    apiEndpoints:
      - order
    policies:
      - cors:
          - action:
              origin: "*"
              methods:
                - "GET"
                - "POST"
                - "OPTIONS"
              allowedHeaders:
                - "Content-Type"
                - "Authorization"
      - proxy:
          - action:
              serviceEndpoint: orderService

  dishPipeline:
    apiEndpoints:
      - dish
    policies:
      - cors:
          - action:
              origin: "*"
              methods:
                - "GET"
                - "OPTIONS"
              allowedHeaders:
                - "Content-Type"
                - "Authorization"
      - proxy:
          - action:
              serviceEndpoint: kitchenService

  ingredientPipeline:
    apiEndpoints:
      - ingredient
    policies:
      - cors:
          - action:
              origin: "*"
              methods:
                - "GET"
                - "OPTIONS"
              allowedHeaders:
                - "Content-Type"
                - "Authorization"
      - proxy:
          - action:
              serviceEndpoint: inventoryService

  purchaseHistoryPipeline:
    apiEndpoints:
      - purchase
    policies:
      - cors:
          - action:
              origin: "*"
              methods:
                - "GET"
                - "OPTIONS"
              allowedHeaders:
                - "Content-Type"
                - "Authorization"
      - proxy:
          - action:
              serviceEndpoint: marketService

  notifyChangeEventPipeline:
    apiEndpoints:
      - notifyChangeEvent
    policies:
      - cors:
          - action:
              origin: "*"
              methods:
                - "GET"
                - "OPTIONS"
              allowedHeaders:
                - "Content-Type"
                - "Authorization"
      - proxy:
          - action:
              serviceEndpoint: orderService